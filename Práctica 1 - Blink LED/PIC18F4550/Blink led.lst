CCS PCH C Compiler, Version 5.105Pd, 1               27-sep.-21 11:24
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   C:\Users\grego\OneDrive\Desktop\CSS_Practicas_OK\Práctica 1 - Blink LED\Proyecto\PIC18F4550\Blink led.lst

               ROM used:   104 bytes (0%)
                           Largest free fragment is 24468
               RAM used:   5 (0%) at main() level
                           6 (0%) worst case
               Stack used: 0 locations
               Stack size: 31

*
2000:  GOTO   2030
.................... /************************************************************************************************
.................... Company:
.................... Microside Technology Inc.
.................... 
.................... File Name:
.................... Blink led.c
.................... 
.................... Product Revision  :  1
.................... Device            :  X-TRAINER
.................... Driver Version    :  1.0
.................... ************************************************************************************************/
.................... 
.................... /*
.................... ---------------------------------------------------------------------------
.................... La práctica consiste en controlar el encendido y apagado del LED incluido
.................... en la tarjeta X-TRAINER
.................... ---------------------------------------------------------------------------
.................... */
.................... 
.................... #include <18F4550.h>                            //Incluye el microcontrolador con el que se va a trabajar 
.................... //////////// Standard Header file for the PIC18F4550 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC18F4550
.................... 
.................... #list
.................... 
.................... #use delay(clock=48Mhz, crystal)                //Tipo de oscilador y frecuencia dependiendo del microcontrolador 
*
2008:  CLRF   FEA
200A:  MOVLW  06
200C:  MOVWF  FE9
200E:  MOVF   FEF,W
2010:  BZ    202E
2012:  MOVLW  0F
2014:  MOVWF  01
2016:  CLRF   00
2018:  DECFSZ 00,F
201A:  BRA    2018
201C:  DECFSZ 01,F
201E:  BRA    2016
2020:  MOVLW  8F
2022:  MOVWF  00
2024:  DECFSZ 00,F
2026:  BRA    2024
2028:  NOP   
202A:  DECFSZ FEF,F
202C:  BRA    2012
202E:  RETURN 0
.................... #build(reset=0x02000,interrupt=0x02008)         //Asignación de los vectores de reset e interrupción
.................... #org 0x0000,0x1FFF {}                           //Reserva espacio en la memoria para la versión con bootloader
.................... 
.................... #define LED PIN_A1                              //Pin donde está conectado el LED del X-TRAINER
.................... 
.................... 
.................... void main(void)
2030:  CLRF   FF8
2032:  BCF    FD0.7
2034:  MOVF   FC1,W
2036:  ANDLW  C0
2038:  IORLW  0F
203A:  MOVWF  FC1
203C:  MOVLW  07
203E:  MOVWF  FB4
.................... {
....................      set_tris_a(0XFD);                          //Pin RA1 como salida
2040:  MOVLW  FD
2042:  MOVWF  F92
....................      
....................      while(1)
.................... 
....................            {
....................                   output_HIGH (LED);            //Cambio de estado en el pin RA1
2044:  BCF    F92.1
2046:  BSF    F89.1
....................                   delay_ms (500);               //Retardo
2048:  MOVLW  02
204A:  MOVWF  05
204C:  MOVLW  FA
204E:  MOVWF  06
2050:  RCALL  2008
2052:  DECFSZ 05,F
2054:  BRA    204C
....................                   output_LOW (LED);             //Cambio de estado en el pin RA1     
2056:  BCF    F92.1
2058:  BCF    F89.1
....................                   delay_ms (500) ;              //Retardo
205A:  MOVLW  02
205C:  MOVWF  05
205E:  MOVLW  FA
2060:  MOVWF  06
2062:  RCALL  2008
2064:  DECFSZ 05,F
2066:  BRA    205E
2068:  BRA    2044
....................            }
.................... }
.................... 
206A:  SLEEP 
....................  

Configuration Fuses:
   Word  1: CC07   PLL12 CPUDIV1 NOUSBDIV HS FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
