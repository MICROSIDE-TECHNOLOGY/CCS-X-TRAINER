CCS PCH C Compiler, Version 5.105Pd, 1               27-sep.-21 13:46
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   C:\Users\grego\OneDrive\Desktop\CSS_Practicas_OK\Práctica 13 - Motor DC + L298N\Proyecto\PIC18F45K50\Motor DC + Driver L298N.lst

               ROM used:   482 bytes (1%)
                           Largest free fragment is 24090
               RAM used:   8 (0%) at main() level
                           9 (0%) worst case
               Stack used: 1 locations
               Stack size: 31

*
2000:  GOTO   2030
.................... /************************************************************************************************
.................... Company:
.................... Microside Technology Inc.
.................... 
.................... Product Revision  :  1
.................... Device            :  X-TRAINER
.................... Driver Version    :  1.0
.................... ************************************************************************************************/
.................... /*
.................... ---------------------------------------------------------------------------
.................... Esta práctica consiste en variar la velocidad de un motor usando el módulo
.................... PWM.
.................... ---------------------------------------------------------------------------
.................... */
.................... 
.................... #include <18F45K50.h>                       //Incluye el microcontrolador con el que se va a trabajar 
.................... //////////// Standard Header file for the PIC18F45K50 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC18F45K50
.................... 
.................... #list
.................... 
.................... #use delay(internal=48MHz)                  // Tipo de oscilador y frecuencia dependiendo del microcontrolador 
*
2008:  CLRF   FEA
200A:  MOVLW  08
200C:  MOVWF  FE9
200E:  MOVF   FEF,W
2010:  BZ    202E
2012:  MOVLW  0F
2014:  MOVWF  01
2016:  CLRF   00
2018:  DECFSZ 00,F
201A:  BRA    2018
201C:  DECFSZ 01,F
201E:  BRA    2016
2020:  MOVLW  8F
2022:  MOVWF  00
2024:  DECFSZ 00,F
2026:  BRA    2024
2028:  NOP   
202A:  DECFSZ FEF,F
202C:  BRA    2012
202E:  RETURN 0
.................... #build(reset=0x02000,interrupt=0x02008)     // Asigna los vectores de reset e interrupción para la versión con bootloader
.................... #org 0x0000,0x1FFF {}                       // Reserva espacio en memoria para el bootloader
.................... 
.................... #define IN_1 pin_C0
.................... #define IN_2 pin_C1
.................... 
.................... int16 VELOCIDAD=0;                          //Variable para ajustar el valor del PWM1 en CCP1
.................... 
.................... int1 SUBE=1;                                //Variable para control de ascenso y descenso del valor del PWM
.................... 
.................... void main()
2030:  CLRF   FF8
2032:  BCF    FD0.7
2034:  MOVLW  70
2036:  MOVWF  FD3
2038:  CLRF   FD2
203A:  CLRF   F9B
203C:  CLRF   05
203E:  CLRF   04
2040:  BSF    06.0
2042:  MOVLB  F
2044:  CLRF   x5B
2046:  CLRF   x5C
2048:  CLRF   x5D
204A:  CLRF   x5E
204C:  CLRF   x5F
204E:  CLRF   F9A
2050:  CLRF   F99
2052:  CLRF   F98
.................... {
....................       setup_timer_2 (T2_DIV_BY_16, 255, 1);                            //Configura Timer2, periodo ajustado a 342uS
2054:  MOVLW  00
2056:  IORLW  06
2058:  MOVWF  FBA
205A:  MOVLW  FF
205C:  MOVWF  FBB
....................       setup_ccp1 (CCP_PWM|CCP_SHUTDOWN_AC_L|CCP_SHUTDOWN_BD_L);        //Configura el módulo CCP para uso del PWM
205E:  BCF    F94.2
2060:  BCF    F8B.2
2062:  MOVLW  0C
2064:  MOVWF  FBD
2066:  CLRF   FB7
2068:  CLRF   FB6
206A:  MOVLW  01
206C:  MOVWF  FB9
206E:  BCF    x59.0
....................       while (TRUE)
....................             {
....................                 output_bit (IN_1, 1);                                  //Dirección del motor
2070:  BSF    F8B.0
2072:  BCF    F94.0
....................                 output_bit (IN_2, 0) ;
2074:  BCF    F8B.1
2076:  BCF    F94.1
....................                 SUBE = 1;
2078:  BSF    06.0
.................... 
....................                  while (VELOCIDAD < 1020&&SUBE)
207A:  MOVF   05,W
207C:  SUBLW  03
207E:  BNC   20C6
2080:  BNZ   2088
2082:  MOVF   04,W
2084:  SUBLW  FB
2086:  BNC   20C6
2088:  BTFSS  06.0
208A:  BRA    20C6
....................                        {
....................                                                                         //Se va incrementando del valor en el PWM hasta el máximo
....................                               VELOCIDAD += 5;                           //Se incrementa en pasos de 15 el ciclo de trabajo
208C:  MOVLW  05
208E:  ADDWF  04,F
2090:  MOVLW  00
2092:  ADDWFC 05,F
....................                               set_pwm1_duty (VELOCIDAD);                
2094:  MOVFF  05,02
2098:  MOVFF  04,01
209C:  RRCF   02,F
209E:  RRCF   01,F
20A0:  RRCF   02,F
20A2:  RRCF   01,F
20A4:  RRCF   02,F
20A6:  MOVFF  01,FBE
20AA:  RRCF   02,F
20AC:  RRCF   02,W
20AE:  ANDLW  30
20B0:  MOVWF  00
20B2:  MOVF   FBD,W
20B4:  ANDLW  CF
20B6:  IORWF  00,W
20B8:  MOVWF  FBD
....................                               delay_ms (40);                            
20BA:  MOVLW  28
20BC:  MOVWF  08
20BE:  MOVLB  0
20C0:  RCALL  2008
20C2:  MOVLB  F
20C4:  BRA    207A
....................                         }
.................... 
....................                      SUBE = 0;
20C6:  BCF    06.0
.................... 
....................                  while (VELOCIDAD > 5&& ! SUBE)
20C8:  MOVF   05,F
20CA:  BNZ   20D2
20CC:  MOVF   04,W
20CE:  SUBLW  05
20D0:  BC    2110
20D2:  BTFSC  06.0
20D4:  BRA    2110
....................                           {
....................                                                                          //Se va reduciendo el valor en el PWM hasta el mí­nimo
....................                                   VELOCIDAD -= 5;                        //Se reduce en pasos de 15 el ciclo de trabajo
20D6:  MOVLW  05
20D8:  SUBWF  04,F
20DA:  MOVLW  00
20DC:  SUBWFB 05,F
....................                                   set_pwm1_duty (VELOCIDAD);             
20DE:  MOVFF  05,02
20E2:  MOVFF  04,01
20E6:  RRCF   02,F
20E8:  RRCF   01,F
20EA:  RRCF   02,F
20EC:  RRCF   01,F
20EE:  RRCF   02,F
20F0:  MOVFF  01,FBE
20F4:  RRCF   02,F
20F6:  RRCF   02,W
20F8:  ANDLW  30
20FA:  MOVWF  00
20FC:  MOVF   FBD,W
20FE:  ANDLW  CF
2100:  IORWF  00,W
2102:  MOVWF  FBD
....................                                   delay_ms (40) ;
2104:  MOVLW  28
2106:  MOVWF  08
2108:  MOVLB  0
210A:  RCALL  2008
210C:  MOVLB  F
210E:  BRA    20C8
....................                             }
.................... 
....................                             SUBE = 1;
2110:  BSF    06.0
....................                             output_bit (IN_1, 0);                        //Alto del motor
2112:  BCF    F8B.0
2114:  BCF    F94.0
....................                             output_bit (IN_2, 0);
2116:  BCF    F8B.1
2118:  BCF    F94.1
....................                             delay_ms (1000) ;
211A:  MOVLW  04
211C:  MOVWF  07
211E:  MOVLW  FA
2120:  MOVWF  08
2122:  MOVLB  0
2124:  RCALL  2008
2126:  DECFSZ 07,F
2128:  BRA    212C
212A:  BRA    2130
212C:  MOVLB  F
212E:  BRA    211E
.................... 
....................                            output_bit (IN_1, 0);                         //Dirección del motor
2130:  BCF    F8B.0
2132:  BCF    F94.0
....................                            output_bit (IN_2, 1) ;
2134:  BSF    F8B.1
2136:  BCF    F94.1
....................                             SUBE = 1;
2138:  BSF    06.0
.................... 
....................                     while (VELOCIDAD < 1020&&SUBE)
213A:  MOVF   05,W
213C:  SUBLW  03
213E:  BNC   2182
2140:  BNZ   2148
2142:  MOVF   04,W
2144:  SUBLW  FB
2146:  BNC   2182
2148:  BTFSS  06.0
214A:  BRA    2182
....................                              {
....................                                                                           //Se va incrementando del valor en el PWM hasta el máximo
....................                                    VELOCIDAD += 5;                        //Se incrementa en pasos de 15 el ciclo de trabajo
214C:  MOVLW  05
214E:  ADDWF  04,F
2150:  MOVLW  00
2152:  ADDWFC 05,F
....................                                    set_pwm1_duty (VELOCIDAD);             
2154:  MOVFF  05,02
2158:  MOVFF  04,01
215C:  RRCF   02,F
215E:  RRCF   01,F
2160:  RRCF   02,F
2162:  RRCF   01,F
2164:  RRCF   02,F
2166:  MOVFF  01,FBE
216A:  RRCF   02,F
216C:  RRCF   02,W
216E:  ANDLW  30
2170:  MOVWF  00
2172:  MOVF   FBD,W
2174:  ANDLW  CF
2176:  IORWF  00,W
2178:  MOVWF  FBD
....................                                    delay_ms (40);                         
217A:  MOVLW  28
217C:  MOVWF  08
217E:  RCALL  2008
2180:  BRA    213A
....................                               }
.................... 
....................                              SUBE = 0;
2182:  BCF    06.0
.................... 
....................                       while (VELOCIDAD > 5&& ! SUBE)
2184:  MOVF   05,F
2186:  BNZ   218E
2188:  MOVF   04,W
218A:  SUBLW  05
218C:  BC    21C8
218E:  BTFSC  06.0
2190:  BRA    21C8
....................                                {
....................                                                                           //Se va reduciendo el valor en el PWM hasta el mí­nimo
....................                                      VELOCIDAD -= 5;                      //Se reduce en pasos de 15 el ciclo de trabajo
2192:  MOVLW  05
2194:  SUBWF  04,F
2196:  MOVLW  00
2198:  SUBWFB 05,F
....................                                      set_pwm1_duty (VELOCIDAD);           
219A:  MOVFF  05,02
219E:  MOVFF  04,01
21A2:  RRCF   02,F
21A4:  RRCF   01,F
21A6:  RRCF   02,F
21A8:  RRCF   01,F
21AA:  RRCF   02,F
21AC:  MOVFF  01,FBE
21B0:  RRCF   02,F
21B2:  RRCF   02,W
21B4:  ANDLW  30
21B6:  MOVWF  00
21B8:  MOVF   FBD,W
21BA:  ANDLW  CF
21BC:  IORWF  00,W
21BE:  MOVWF  FBD
....................                                      delay_ms (40) ;
21C0:  MOVLW  28
21C2:  MOVWF  08
21C4:  RCALL  2008
21C6:  BRA    2184
....................                                 }
.................... 
....................                           SUBE = 1;
21C8:  BSF    06.0
....................                           output_bit (IN_1, 0);                           //Alto del motor
21CA:  BCF    F8B.0
21CC:  BCF    F94.0
....................                           output_bit (IN_2, 0);
21CE:  BCF    F8B.1
21D0:  BCF    F94.1
.................... 
....................                           delay_ms (500) ;
21D2:  MOVLW  02
21D4:  MOVWF  07
21D6:  MOVLW  FA
21D8:  MOVWF  08
21DA:  RCALL  2008
21DC:  DECFSZ 07,F
21DE:  BRA    21D6
21E0:  MOVLB  F
21E2:  BRA    2070
....................             }
.................... }
21E4:  SLEEP 

Configuration Fuses:
   Word  1: C823   PLL3X PLLEN NOCPUDIV LS48MHZ INTRC_IO PRIMARY_SW FCMEN IESO
   Word  2: 3C5E   PUT BROWNOUT BORV19 NOLPBOR NOWDT WDT32768
   Word  3: D300   CCP2C1 PBADEN T3CKC0 SDOB3 MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
